# TASK4: "SALES PREDICTION USING PYTHON"

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv(r'C:\Users\Hp\Downloads\advertising.csv')

df.head()

df.shape

df.info()

df.describe()

df.isnull().sum()

fig,axs=plt.subplots(3,figsize=(5,5))
plt1=sns.boxplot(df['TV'],ax=axs[0])
plt2=sns.boxplot(df['Newspaper'],ax=axs[1])
plt3=sns.boxplot(df['Radio'],ax=axs[2])
plt.tight_layout()

sns.boxplot(df['Sales'])
plt.show()

sns.pairplot(df,x_vars=['TV','Newspaper','Radio'],y_vars='Sales',height=4,aspect=1,kind='scatter')
plt.show()

sns.heatmap(df.corr(),cmap="YlGnBu",annot=True)
plt.show()

x=df['TV']
y=df['Sales']

x

y

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(x,y,train_size=0.7,test_size=0.2,random_state=100)

X_train.head()

y_train.head()

import statsmodels.api as sm

X_train_sm=sm.add_constant(X_train)

lr=sm.OLS(y_train,X_train_sm).fit()

lr.params

print(lr.summary())

plt.scatter(X_train,y_train)
plt.plot(X_train,6.948+0.054*X_train,'r')
plt.show()

y_train_pred=lr.predict(X_train_sm)
res=(y_train-y_train_pred)

y_train_pred=lr.predict(X_train_sm)
res=(y_train-y_train_pred)

fig=plt.figure()
sns.distplot(res,bins=15)
fig.suptitle('Error Terms',fontsize=14)
plt.xlabel('y_train-y_train_pred',fontsize=14)
plt.show()

plt.scatter(X_train,res)
plt.show()

X_test_sm=sm.add_constant(X_test)
y_pred=lr.predict(X_test_sm)

y_pred.head()

from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

np.sqrt(mean_squared_error(y_test,y_pred))

r_squared=r2_score(y_test,y_pred)
r_squared

plt.scatter(X_test,y_test)
plt.plot(X_test,6.948+0.054*X_test,'r')
plt.show()
